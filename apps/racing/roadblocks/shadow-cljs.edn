{:builds
 {:app {:asset-path "/js"
        :devtools {#_#_:after-load (fn []
                                     ;; Would need to call ig/halt! on @system/state
                                     ;; And then...what?
                                     ;; The current implementation seems to work OK for now.
                                     (throw (js/Error. "What would make sense?")))
                   :browser-inject :main}
        ;; TODO: Add add a license :prepend to each
        :modules {:main {:init-fn frereth.apps.roadblocks.core/main
                         :depends-on #{:shared}}
                  ;; Empty :entries forces the compiler to collect all
                  ;; the code shared between :main and :worker.
                  ;; Q: Why would you ever do anything else?
                  :shared {:entries []}
                  :worker {:init-fn frereth.apps.roadblocks.worker/main
                           :depends-on #{:shared}
                           :web-worker true}}
        :output-dir "public/js"
        :target :browser}
  :cards {:asset-path "/js"
          :externs ["./src/js/net/glmatrix/gl-matrix.ext.js"]
          :foreign-libs [{:file "./src/js/net/glmatrix/gl-matrix.js"
                          :file-min "./src/js/net/glmatrix/gl-matrix-min.js"
                          :provides ["net.glmatrix.gl-matrix"]}
                         #_{:file "./src/js/"}]
          :modules {:main {:init-fn frereth.apps.roadblocks.cards/main}}
          #_#_:compiler-options {:devcards true}
          ;; This seems like it should go to a completely different dir
          ;; than app.
          ;; That may be a terrible idea, since they should mostly use
          ;; the same code.
          :output-dir "public/js/cards"
          :target :browser}
  :test {:ns-regexp "roadblocks.cards"
         :output-to "out/test.js"
         :target :node-test}
  :e2e {:ns-regexp "e2e.*"
        :output-to "out/e2e.js"
        :target :node-test}}
 :deps {:alias [:dev]}
 :dev-http {3000 "public"}
 :nrepl {:port 3333}
 #_#_:source-paths ["src/clj" "src/cljs" "src/cljc"]}
