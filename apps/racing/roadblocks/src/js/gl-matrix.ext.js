/**********************************************************************
 * Extern for glMatrix
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var glMatrix = {
  "glMatrix": {
    "ARRAY_TYPE": function () {},
    "EPSILON": {},
    "RANDOM": function () {},
    "equals": function () {},
    "setMatrixArrayType": function () {},
    "toRadian": function () {}
  },
  "mat2": {
    "LDU": function () {},
    "add": function () {},
    "adjoint": function () {},
    "clone": function () {},
    "copy": function () {},
    "create": function () {},
    "determinant": function () {},
    "equals": function () {},
    "exactEquals": function () {},
    "frob": function () {},
    "fromRotation": function () {},
    "fromScaling": function () {},
    "fromValues": function () {},
    "identity": function () {},
    "invert": function () {},
    "mul": function () {},
    "multiply": function () {},
    "multiplyScalar": function () {},
    "multiplyScalarAndAdd": function () {},
    "rotate": function () {},
    "scale": function () {},
    "set": function () {},
    "str": function () {},
    "sub": function () {},
    "subtract": function () {},
    "transpose": function () {}
  },
  "mat2d": {
    "add": function () {},
    "clone": function () {},
    "copy": function () {},
    "create": function () {},
    "determinant": function () {},
    "equals": function () {},
    "exactEquals": function () {},
    "frob": function () {},
    "fromRotation": function () {},
    "fromScaling": function () {},
    "fromTranslation": function () {},
    "fromValues": function () {},
    "identity": function () {},
    "invert": function () {},
    "mul": function () {},
    "multiply": function () {},
    "multiplyScalar": function () {},
    "multiplyScalarAndAdd": function () {},
    "rotate": function () {},
    "scale": function () {},
    "set": function () {},
    "str": function () {},
    "sub": function () {},
    "subtract": function () {},
    "translate": function () {}
  },
  "mat3": {
    "add": function () {},
    "adjoint": function () {},
    "clone": function () {},
    "copy": function () {},
    "create": function () {},
    "determinant": function () {},
    "equals": function () {},
    "exactEquals": function () {},
    "frob": function () {},
    "fromMat2d": function () {},
    "fromMat4": function () {},
    "fromQuat": function () {},
    "fromRotation": function () {},
    "fromScaling": function () {},
    "fromTranslation": function () {},
    "fromValues": function () {},
    "identity": function () {},
    "invert": function () {},
    "mul": function () {},
    "multiply": function () {},
    "multiplyScalar": function () {},
    "multiplyScalarAndAdd": function () {},
    "normalFromMat4": function () {},
    "projection": function () {},
    "rotate": function () {},
    "scale": function () {},
    "set": function () {},
    "str": function () {},
    "sub": function () {},
    "subtract": function () {},
    "translate": function () {},
    "transpose": function () {}
  },
  "mat4": {
    "add": function () {},
    "adjoint": function () {},
    "clone": function () {},
    "copy": function () {},
    "create": function () {},
    "determinant": function () {},
    "equals": function () {},
    "exactEquals": function () {},
    "frob": function () {},
    "fromQuat": function () {},
    "fromQuat2": function () {},
    "fromRotation": function () {},
    "fromRotationTranslation": function () {},
    "fromRotationTranslationScale": function () {},
    "fromRotationTranslationScaleOrigin": function () {},
    "fromScaling": function () {},
    "fromTranslation": function () {},
    "fromValues": function () {},
    "fromXRotation": function () {},
    "fromYRotation": function () {},
    "fromZRotation": function () {},
    "frustum": function () {},
    "getRotation": function () {},
    "getScaling": function () {},
    "getTranslation": function () {},
    "identity": function () {},
    "invert": function () {},
    "lookAt": function () {},
    "mul": function () {},
    "multiply": function () {},
    "multiplyScalar": function () {},
    "multiplyScalarAndAdd": function () {},
    "ortho": function () {},
    "perspective": function () {},
    "perspectiveFromFieldOfView": function () {},
    "rotate": function () {},
    "rotateX": function () {},
    "rotateY": function () {},
    "rotateZ": function () {},
    "scale": function () {},
    "set": function () {},
    "str": function () {},
    "sub": function () {},
    "subtract": function () {},
    "targetTo": function () {},
    "translate": function () {},
    "transpose": function () {}
  },
  "quat": {
    "add": function () {},
    "calculateW": function () {},
    "clone": function () {},
    "conjugate": function () {},
    "copy": function () {},
    "create": function () {},
    "dot": function () {},
    "equals": function () {},
    "exactEquals": function () {},
    "exp": function () {},
    "fromEuler": function () {},
    "fromMat3": function () {},
    "fromValues": function () {},
    "getAngle": function () {},
    "getAxisAngle": function () {},
    "identity": function () {},
    "invert": function () {},
    "len": function () {},
    "length": function () {},
    "lerp": function () {},
    "ln": function () {},
    "mul": function () {},
    "multiply": function () {},
    "normalize": function () {},
    "pow": function () {},
    "random": function () {},
    "rotateX": function () {},
    "rotateY": function () {},
    "rotateZ": function () {},
    "rotationTo": function () {},
    "scale": function () {},
    "set": function () {},
    "setAxes": function () {},
    "setAxisAngle": function () {},
    "slerp": function () {},
    "sqlerp": function () {},
    "sqrLen": function () {},
    "squaredLength": function () {},
    "str": function () {}
  },
  "quat2": {
    "add": function () {},
    "clone": function () {},
    "conjugate": function () {},
    "copy": function () {},
    "create": function () {},
    "dot": function () {},
    "equals": function () {},
    "exactEquals": function () {},
    "fromMat4": function () {},
    "fromRotation": function () {},
    "fromRotationTranslation": function () {},
    "fromRotationTranslationValues": function () {},
    "fromTranslation": function () {},
    "fromValues": function () {},
    "getDual": function () {},
    "getReal": function () {},
    "getTranslation": function () {},
    "identity": function () {},
    "invert": function () {},
    "len": function () {},
    "length": function () {},
    "lerp": function () {},
    "mul": function () {},
    "multiply": function () {},
    "normalize": function () {},
    "rotateAroundAxis": function () {},
    "rotateByQuatAppend": function () {},
    "rotateByQuatPrepend": function () {},
    "rotateX": function () {},
    "rotateY": function () {},
    "rotateZ": function () {},
    "scale": function () {},
    "set": function () {},
    "setDual": function () {},
    "setReal": function () {},
    "sqrLen": function () {},
    "squaredLength": function () {},
    "str": function () {},
    "translate": function () {}
  },
  "vec2": {
    "add": function () {},
    "angle": function () {},
    "ceil": function () {},
    "clone": function () {},
    "copy": function () {},
    "create": function () {},
    "cross": function () {},
    "dist": function () {},
    "distance": function () {},
    "div": function () {},
    "divide": function () {},
    "dot": function () {},
    "equals": function () {},
    "exactEquals": function () {},
    "floor": function () {},
    "forEach": function () {},
    "fromValues": function () {},
    "inverse": function () {},
    "len": function () {},
    "length": function () {},
    "lerp": function () {},
    "max": function () {},
    "min": function () {},
    "mul": function () {},
    "multiply": function () {},
    "negate": function () {},
    "normalize": function () {},
    "random": function () {},
    "rotate": function () {},
    "round": function () {},
    "scale": function () {},
    "scaleAndAdd": function () {},
    "set": function () {},
    "sqrDist": function () {},
    "sqrLen": function () {},
    "squaredDistance": function () {},
    "squaredLength": function () {},
    "str": function () {},
    "sub": function () {},
    "subtract": function () {},
    "transformMat2": function () {},
    "transformMat2d": function () {},
    "transformMat3": function () {},
    "transformMat4": function () {},
    "zero": function () {}
  },
  "vec3": {
    "add": function () {},
    "angle": function () {},
    "bezier": function () {},
    "ceil": function () {},
    "clone": function () {},
    "copy": function () {},
    "create": function () {},
    "cross": function () {},
    "dist": function () {},
    "distance": function () {},
    "div": function () {},
    "divide": function () {},
    "dot": function () {},
    "equals": function () {},
    "exactEquals": function () {},
    "floor": function () {},
    "forEach": function () {},
    "fromValues": function () {},
    "hermite": function () {},
    "inverse": function () {},
    "len": function () {},
    "length": function () {},
    "lerp": function () {},
    "max": function () {},
    "min": function () {},
    "mul": function () {},
    "multiply": function () {},
    "negate": function () {},
    "normalize": function () {},
    "random": function () {},
    "rotateX": function () {},
    "rotateY": function () {},
    "rotateZ": function () {},
    "round": function () {},
    "scale": function () {},
    "scaleAndAdd": function () {},
    "set": function () {},
    "sqrDist": function () {},
    "sqrLen": function () {},
    "squaredDistance": function () {},
    "squaredLength": function () {},
    "str": function () {},
    "sub": function () {},
    "subtract": function () {},
    "transformMat3": function () {},
    "transformMat4": function () {},
    "transformQuat": function () {},
    "zero": function () {}
  },
  "vec4": {
    "add": function () {},
    "ceil": function () {},
    "clone": function () {},
    "copy": function () {},
    "create": function () {},
    "cross": function () {},
    "dist": function () {},
    "distance": function () {},
    "div": function () {},
    "divide": function () {},
    "dot": function () {},
    "equals": function () {},
    "exactEquals": function () {},
    "floor": function () {},
    "forEach": function () {},
    "fromValues": function () {},
    "inverse": function () {},
    "len": function () {},
    "length": function () {},
    "lerp": function () {},
    "max": function () {},
    "min": function () {},
    "mul": function () {},
    "multiply": function () {},
    "negate": function () {},
    "normalize": function () {},
    "random": function () {},
    "round": function () {},
    "scale": function () {},
    "scaleAndAdd": function () {},
    "set": function () {},
    "sqrDist": function () {},
    "sqrLen": function () {},
    "squaredDistance": function () {},
    "squaredLength": function () {},
    "str": function () {},
    "sub": function () {},
    "subtract": function () {},
    "transformMat4": function () {},
    "transformQuat": function () {},
    "zero": function () {}
  }
};
/**********************************************************************
 * End Generated Extern for glMatrix
/**********************************************************************/