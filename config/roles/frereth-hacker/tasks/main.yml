---
# Customize the unprivileged user account the way I'm used to

- name: Basic configuration folders
  remote_user: jimrthy
  file: name=/home/jimrthy/.{{ item }} state=directory owner=jimrthy group=jimrthy
  with_items:
  - lein
  - emacs.d

- name: Basic Configuration files
  remote_user: jimrthy
  copy: src={{ item }} dest=/home/jimrthy/.{{ item }} backup=yes owner=jimrthy group=jimrthy
  with_items: config_files_to_copy

- name: Clone Oh! My ZSH! Repository
  git: repo=https://github.com/jimrthy/oh-my-zsh.git dest=/home/jimrthy/.oh-my-zsh update=yes

- name: Reassign Oh! My ZSH! ownership
  file: path=/home/jimrthy/.oh-my-zsh recurse=yes state=directory owner=jimrthy group=jimrthy

- name: Need an ssh directory for working the magic
  file: path=/home/jimrthy/.ssh/keys state=directory mode=0700 owner=jimrthy group=jimrthy

- name: Default signing key
  copy: src=hacker-priv_key.asc dest=/home/jimrthy/.ssh/keys/hacker-priv_key.asc
        owner=jimrthy group=jimrthy

- name: Import signing key
  command: gpg2 --import /home/jimrthy/.ssh/keys/hacker-priv_key.asc
  # Don't want to really do this. But it makes life easier while I'm
  # debugging (and you can't import the same key twice)
  ignore_errors: True

# TODO: Uncomment this when I'm finished debugging
# Q: Does it make any real difference?
#- name: Pre-install Leiningen
#  sudo_user: jimrthy
#  sudo: True
#  command: /usr/local/bin/lein

- name: Set up directory for local repos
  file: path=/home/jimrthy/projects state=directory owner=jimrthy group=jimrthy

# There have been issues in the past with getting git working over ssh.
# Particularly with freezing at "Accept new known_host?" in the background
# when there is no UI.
# This is one old-school work-around.
- name: Get github ssh key
  shell: ssh-keyscan github.com
  register: git_repo_host_key

# Adding the host key manually used to work. It doesn't seem to any longer.
- name: Register github as a known host
  lineinfile: create=yes dest=/home/jimrthy/.ssh/known_hosts line='{{ git_repo_host_key.stdout }}' state=present owner=jimrthy

# Key for connecting to github
# N.B.: Use your own. Make sure it doesn't become publicly available.
- name: Copy github private key over
  remote_user: jimrthy
  copy: dest=/home/{{ item }}/.ssh/github_key backup=yes src=resources/insecure.rsa mode=0600 owner={{ item }} group={{ item }}
  with_items:
    - jimrthy
    #- james

- name: Use that key
  copy: dest=/home/jimrthy/.ssh/config backup=yes src=ssh.config owner=jimrthy group=jimrthy

# TODO: There are really 2 groups of repos, at least.
# Some are directly related to things I'm trying to work on right now.
# Others are pieces on which I'm building that just don't have go
# public download options, for various reasons. It makes sense to branch
# those here.
# Note that this has a non-trivial impact on the downstream playbooks that
# actually use these repositories
- name: Clone repositories
  git: force=no
       repo=git@github.com:jimrthy/{{ item }}
       dest=/home/jimrthy/projects/{{ item }}
       key_file=/home/jimrthy/.ssh/github_key
       recursive=yes
       update=yes
       accept_hostkey=yes
  with_items: repositories
